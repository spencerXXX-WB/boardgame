
name: Java CI with Maven

on:
  push:
    branches: [ "main" ] 

jobs:
  build:

    runs-on: self-hosted

    steps:
    - uses: actions/checkout@v4
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
        cache: maven
    - name: Build with Maven
      run: mvn package --file pom.xml
  
  Fs-Scan:
    runs-on: self-hosted
    needs: build
    steps:
      - uses: actions/upload-artifact@v4
        with:
          name: my-artifact
          path: target/*.jar

      - name: FS scan
        run: |
          trivy fs --format table -o report-table.html .

  Sonar-scan-Quality-gate:
    runs-on: self-hosted
    needs: [Fs-Scan] 
    steps:
      - name:  SonarQube Scan
        uses:  sonarsource/sonarqube-scan-action@master
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
      
      - name: SonarQube Quality Gate check
        id: sonarqube-quality-gate-check
        uses: sonarsource/sonarqube-quality-gate-action@master
        with:
          pollingTimeoutSec: 600
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
  
  docker:
    runs-on: self-hosted
    needs: Sonar-scan-Quality-gate
    steps:
      -
        name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: build the image
        run: docker build -t spencerxxxwb/boardgame:latest .  
      -
        name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Trivy Image Scan
        run: |
          trivy image --format table -o trivy-image-report.html spencerxxxwb/boardgame:latest

      - name: push docker image
        run: docker push spencerxxxwb/boardgame:2 
      
  deplotoK8s:
    needs: docker
    runs-on: self-hosted
    steps:
      - name: deploy to k8s
        uses: actions-hub/kubectl@master
        env:
          KUBE_CONFIG: ${{ secrets.KUBE_CONFIG }}
        with:
          args: apply -f deployment-service.yaml -n webapps
        
